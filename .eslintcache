[{"C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\index.js":"1","C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\App.js":"2","C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\reportWebVitals.js":"3","C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\components\\Header.jsx":"4","C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\pages\\Homepage.jsx":"5","C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\components\\Footer.jsx":"6","C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\pages\\RegisterPage.jsx":"7","C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\pages\\LoginPage.jsx":"8","C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\pages\\ErrorPage.jsx":"9","C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\components\\FormContainer.jsx":"10","C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\components\\Message.jsx":"11","C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\pages\\ContactPage.jsx":"12","C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\pages\\TechnologyPage.jsx":"13","C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\pages\\UseCasesPage.jsx":"14"},{"size":322,"mtime":1610366653870,"results":"15","hashOfConfig":"16"},{"size":1249,"mtime":1610366226121,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":1848,"mtime":1610364898639,"results":"19","hashOfConfig":"16"},{"size":591,"mtime":1610273095894,"results":"20","hashOfConfig":"16"},{"size":1358,"mtime":1610272845723,"results":"21","hashOfConfig":"16"},{"size":3598,"mtime":1610036241713,"results":"22","hashOfConfig":"16"},{"size":2354,"mtime":1610036196462,"results":"23","hashOfConfig":"16"},{"size":387,"mtime":1610029412150,"results":"24","hashOfConfig":"16"},{"size":347,"mtime":1610029029294,"results":"25","hashOfConfig":"16"},{"size":210,"mtime":1610029604355,"results":"26","hashOfConfig":"16"},{"size":3048,"mtime":1610280451711,"results":"27","hashOfConfig":"16"},{"size":1227,"mtime":1610365206055,"results":"28","hashOfConfig":"16"},{"size":1190,"mtime":1610368362005,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uld5k",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\index.js",[],"C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\App.js",[],["62","63"],"C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\reportWebVitals.js",[],"C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\components\\Header.jsx",["64"],"import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, Image } from 'react-bootstrap'\r\nimport logo from '../../src/assets/logo.png'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <Navbar variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>\r\n              <Image className='logo' fluid src={logo} alt='Abilisense' />\r\n            </Navbar.Brand>\r\n          </LinkContainer>\r\n\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/'>\r\n                <Nav.Link className='nav-item'>Home</Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to='/platform'>\r\n                <Nav.Link>Platform</Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to='/tech'>\r\n                <Nav.Link>Technology</Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to='/use-cases'>\r\n                <Nav.Link>Use-Cases</Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to='/media'>\r\n                <Nav.Link>Media</Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to='/contact'>\r\n                <Nav.Link>Contact Us</Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer className='mr-sm-2' to='/login'>\r\n                <Nav.Link className='header-login-link'>\r\n                  <i className='fas fa-user'></i> Login\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\pages\\Homepage.jsx",[],"C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\components\\Footer.jsx",[],"C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\pages\\RegisterPage.jsx",["65"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import Message from '../components/Message/Message'\r\n// import Loader from '../components/Loader/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport Message from '../components/Message'\r\n// import { register } from '../actions/userActions'\r\n\r\nconst RegisterPage = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  //   const dispatch = useDispatch()\r\n\r\n  //   const userRegister = useSelector((state) => state.userRegister)\r\n  //   const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  //   useEffect(() => {\r\n  //     if (userInfo) {\r\n  //       history.push(redirect)\r\n  //     }\r\n  //   }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    }\r\n    // else {\r\n    //   dispatch(register(name, email, password))\r\n    // }\r\n    else {\r\n      setMessage('Registerd')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {/* {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />} */}\r\n      {message && <Message>{message}</Message>}\r\n\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Full Name</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n            minLength={6}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n            minLength={6}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='info'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account ?\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            &nbsp; Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterPage\r\n","C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\pages\\LoginPage.jsx",["66"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import Message from '../components/Message/Message'\r\n// import Loader from '../components/Loader/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\n// import { login } from '../actions/userActions'\r\n\r\nconst LoginPage = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  //   const dispatch = useDispatch()\r\n\r\n  //   const userLogin = useSelector((state) => state.userLogin)\r\n  //   const { loading, error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  //   useEffect(() => {\r\n  //     if (userInfo) {\r\n  //       history.push(redirect)\r\n  //     }\r\n  //   }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    // dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {/* {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />} */}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n            minLength={6}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='info'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            &nbsp;Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginPage\r\n","C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\pages\\ErrorPage.jsx",[],"C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\components\\FormContainer.jsx",[],"C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\components\\Message.jsx",[],"C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\pages\\ContactPage.jsx",[],"C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\pages\\TechnologyPage.jsx",[],"C:\\Users\\ליעד\\OneDrive\\Desktop\\abilisense-website\\src\\pages\\UseCasesPage.jsx",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":2,"column":10,"nodeType":"73","messageId":"74","endLine":2,"endColumn":15},{"ruleId":"71","severity":1,"message":"75","line":1,"column":27,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"75","line":1,"column":27,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]